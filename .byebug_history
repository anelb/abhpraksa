c
product
c
product_params
product
c
product_params
c
params
product_params
c
product_params
c
product_params
@product
c
product_params
@product
c
product_params
@product
c
@product.product_variants
@product
c
create
@product
c
@product
create
c
@brand
self
@categories
c
@product
@categories
c
product_params
@product
c
product_params
@product
c
params[:product]
product_params
c
product_params
c
product_params
c
product_params
c
product_params
c
@product
c
product_params
@product
c
product_params
c
@product
c
@product
c
product_params
c
params[:product]
params[1]
params.length
params.class
params
c
params[:product][:brands][:brand_id]
product_params
params[:product][:brands][:brand_id]
params[:product][:brands]
params[:product]
c
@product
c
@params
c
product_params
@product
c
params[:product][:brands][:brand_id].class
params[:product][:brands][:brand_id]
params[:product][:brands]['brand_id']
params[:product][:brands]
params[:brands]
brands
@product
c
product_params
@product
c
product_params
@product
c
product_params
@product
c
categories.first.title.mb_chars.downcase.split[0].to_s.capitalize
categories.first.title.mb_chars.downcase.split[0].to_s
categories.first.title.mb_chars.downcase.split[0].capitalize
categories.first.title.mb_chars.downcase.split[0]
categories.first.title.mb_chars.downcase.split.length
categories.first.title.mb_chars.downcase.split
self
c
@products
c
@products
c
@products
c
@products
c
@products
c
@products.length
@products
c
@products
c
self.all.collect.count
self.all.collect
c
product.product_variants.empty?
product.product_variants
product
self
c
@products
c
cart_items
c
slice.length
slice
@sale_products.each_slice(4)
c
@sale_products
c
params
c
@product
c
@product
c
@product.categories
@product
params
params[:category_id]
c
ProductVariant.check_quantity(product_variant).count
product_variant
c
product_variant
product_variant_qunatity
product_variant_quantity
c
current_item
c
ProductVariant.where(@cart_item.product_variant_id)
@cart_item.product_variant
@cart_item
@product
c
item.product_variant
item
c
ProductVariant.find(item.product_variant_id)
cart_items.each { |x| puts x.product_variant_id }
cart_items.each { |x| x.product_variant_id }
cart_items
current_cart
item.product_variant_id
item
c
current_cart.cart_items.first.product_variant_id
current_cart.cart_items.length
current_cart.cart_items
current_cart
c
current_cart
c
current_cart
c
current_cart
@current_cart
c
@current_cart
c
@order
c
params
order_params
@order
c
Stripe::Charge.create.methods.sort
Stripe::Charge.methods.sort
Stripe::Charge
Stripe::Charge.create
c
@order
c
current_user.nil?
current_user
c
Rails.configuration.stripe[:publishable_key]
c
Rails.configuration.stripe
Rails.configuration
 Rails.configuration.stripe[:publishable_key].values_at
 Rails.configuration.stripe[:publishable_key].value_at
 Rails.configuration.stripe[:publishable_key].value
 Rails.configuration.stripe[:publishable_key].length
 Rails.configuration.stripe[:publishable_key].nil?
 Rails.configuration.stripe[:publishable_key].methods.sort
 Rails.configuration.stripe[:publishable_key].inspect
 Rails.configuration.stripe[:publishable_key]
Rails.configuration.stripe
c
Rails::Application::Configuration.debugger
Rails::Application::Configuration.methods
Rails::Application::Configuration
Rails.configuration
c
current_item
c
current_item.quantity + option[:params][:quantity].to_i
option[:params][:quantity]
current_item.quantity
current_item
c
current_item
c
current_item
c
option[:params][:quantity].empty?
option[:params][:quantity]
continue
C
params[:quantity].nil?
params
@cart_item
c
@cart_item
c
cart_items_params[:quantity]
cart_items_params.quantity
 params[:cart_item][:quantity].empty?
 params[:cart_item][:quantity].nil?
 params[:cart_item][:quantity]
